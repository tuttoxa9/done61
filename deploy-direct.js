#!/usr/bin/env node
import fs from 'fs';
import path from 'path';
import { exec } from 'child_process';
import { promisify } from 'util';

const execPromise = promisify(exec);

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ Netlify Drop API
async function deployToNetlify() {
  console.log('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–ø–ª–æ—é...');

  try {
    // –£–ø–∞–∫—É–µ–º dist –≤ –∞—Ä—Ö–∏–≤, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
    if (!fs.existsSync(path.resolve('..', 'output.zip'))) {
      console.log('–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞...');
      await execPromise('cd dist && zip -rFS ../../output.zip .');
    }

    console.log('–ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º curl –¥–ª—è –ø—Ä—è–º–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ Netlify Drop (—ç—Ç–æ –æ—Ç–∫—Ä—ã—Ç—ã–π API Netlify)
    const command = `
      curl -X POST 'https://api.netlify.com/api/v1/sites' \
      -H 'Content-Type: application/zip' \
      --data-binary '@../output.zip'
    `;

    const { stdout, stderr } = await execPromise(command);

    if (stderr) {
      console.error('–û—à–∏–±–∫–∞:', stderr);
    }

    console.log('–û—Ç–≤–µ—Ç API:', stdout);
    console.log('–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!');

    try {
      // –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å URL –∏–∑ –æ—Ç–≤–µ—Ç–∞
      const response = JSON.parse(stdout);
      if (response.url) {
        console.log(`üöÄ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: ${response.url}`);
        // –¢–∞–∫–∂–µ –≤—ã–≤–µ–¥–µ–º admin_url –µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω
        if (response.admin_url) {
          console.log(`‚öôÔ∏è –ê–¥–º–∏–Ω–∫–∞: ${response.admin_url}`);
        }
      }
    } catch (e) {
      console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å URL –∏–∑ –æ—Ç–≤–µ—Ç–∞.');
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π
deployToNetlify();
